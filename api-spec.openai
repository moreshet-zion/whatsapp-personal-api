openapi: 3.0.3
info:
  title: Personal WhatsApp API with Scheduling
  description: A personal WhatsApp API server with scheduled messaging capabilities for birthday reminders, regular check-ins, automated notifications, and pub/sub messaging for broadcasting to multiple subscribers.
  version: 1.0.0
  contact:
    name: Personal WhatsApp API
  license:
    name: MIT

servers:
  - url: https://whatsapp-personal-api.fly.dev
    description: Production server (Fly.io)
  - url: http://localhost:3000
    description: Local development server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Get connection status
      description: Returns the current WhatsApp connection status and system information
      operationId: getHealth
      tags:
        - System
      security: []
      responses:
        '200':
          description: System status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [connected, disconnected]
                    description: WhatsApp connection status
                  timestamp:
                    type: string
                    format: date-time
                    description: Current timestamp
                  scheduledMessages:
                    type: integer
                    description: Total number of scheduled messages
                  activeJobs:
                    type: integer
                    description: Number of active cron jobs
              example:
                status: "connected"
                timestamp: "2024-01-15T10:30:00Z"
                scheduledMessages: 3
                activeJobs: 2

  /qr:
    get:
      summary: Get QR code for WhatsApp authentication
      description: Returns QR code data and image for linking WhatsApp account
      operationId: getQRCode
      tags:
        - Authentication
      responses:
        '200':
          description: QR code data or status
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      qr:
                        type: string
                        description: QR code string data
                      qrImage:
                        type: string
                        description: Base64 encoded QR code image
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
                        examples:
                          - "Already authenticated"
                          - "QR code not available yet, please wait..."

  /groups:
    get:
      summary: Get WhatsApp groups
      description: Returns a list of all WhatsApp groups the user is part of
      operationId: getGroups
      tags:
        - Groups
      responses:
        '200':
          description: List of groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        jid:
                          type: string
                          description: Group JID (unique identifier)
                          example: "120363147258369076@g.us"
                        name:
                          type: string
                          description: Group name
                          example: "Family Group"
                        participants:
                          type: integer
                          description: Number of participants in the group
                          example: 10
        '503':
          description: WhatsApp not connected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /send:
    post:
      summary: Send immediate WhatsApp message
      description: Sends a WhatsApp message immediately to the specified number or group JID
      operationId: sendMessage
      tags:
        - Messaging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                number:
                  type: string
                  description: Phone number without country code prefix (either number or jid must be provided)
                  example: "1234567890"
                jid:
                  type: string
                  description: WhatsApp JID for groups or direct formatted numbers (either number or jid must be provided)
                  example: "120363147258369076@g.us"
                message:
                  type: string
                  description: Message content to send
                  example: "Hello from my API!"
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Message sent successfully"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: WhatsApp not connected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scheduled:
    get:
      summary: Get all scheduled messages
      description: Returns a list of all scheduled messages with optional filtering
      operationId: getScheduledMessages
      tags:
        - Scheduled Messages
      parameters:
        - name: active
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Filter by active status
        - name: oneTime
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Filter by one-time status
        - name: executed
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Filter by executed status (for date-based schedules)
      responses:
        '200':
          description: List of scheduled messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  scheduledMessages:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScheduledMessage'

    post:
      summary: Create scheduled message
      description: Creates a new scheduled message with cron schedule
      operationId: createScheduledMessage
      tags:
        - Scheduled Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - schedule
              properties:
                number:
                  type: string
                  description: Phone number without country code prefix (either number or jid must be provided)
                  example: "1234567890"
                jid:
                  type: string
                  description: WhatsApp JID for groups or direct formatted numbers (either number or jid must be provided)
                  example: "120363147258369076@g.us"
                message:
                  type: string
                  description: Message content to send
                  example: "Happy Monday!"
                schedule:
                  type: string
                  description: Cron schedule expression
                  example: "0 9 * * 1"
                description:
                  type: string
                  description: Optional description of the scheduled message
                  example: "Weekly Monday greeting"
                oneTime:
                  type: boolean
                  description: Whether this is a one-time message (deactivates after sending)
                  default: false
      responses:
        '200':
          description: Scheduled message created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Scheduled message created"
                  scheduledMessage:
                    $ref: '#/components/schemas/ScheduledMessage'
        '400':
          description: Invalid request or cron schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scheduled/{id}:
    put:
      summary: Update scheduled message
      description: Updates an existing scheduled message
      operationId: updateScheduledMessage
      tags:
        - Scheduled Messages
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Scheduled message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: Phone number (optional if jid provided)
                jid:
                  type: string
                  description: WhatsApp JID for groups or direct formatted numbers
                message:
                  type: string
                  description: Message content
                schedule:
                  type: string
                  description: Cron schedule expression
                scheduleDate:
                  type: string
                  format: date-time
                  description: ISO 8601 date-time for one-time scheduled messages
                description:
                  type: string
                  description: Message description
                oneTime:
                  type: boolean
                  description: One-time message flag
                active:
                  type: boolean
                  description: Active status
      responses:
        '200':
          description: Scheduled message updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Scheduled message updated"
                  scheduledMessage:
                    $ref: '#/components/schemas/ScheduledMessage'
        '404':
          description: Scheduled message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete scheduled message
      description: Deletes a scheduled message permanently
      operationId: deleteScheduledMessage
      tags:
        - Scheduled Messages
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Scheduled message ID
      responses:
        '200':
          description: Scheduled message deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Scheduled message deleted"
        '404':
          description: Scheduled message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scheduled/{id}/toggle:
    post:
      summary: Toggle scheduled message active status
      description: Activates or deactivates a scheduled message
      operationId: toggleScheduledMessage
      tags:
        - Scheduled Messages
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Scheduled message ID
      responses:
        '200':
          description: Scheduled message toggled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Scheduled message activated"
                  scheduledMessage:
                    $ref: '#/components/schemas/ScheduledMessage'
        '404':
          description: Scheduled message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scheduleDate:
    post:
      summary: Schedule a one-time message at a specific date/time
      description: Creates a new scheduled message that will be sent once at a specific date and time
      operationId: createDateScheduledMessage
      tags:
        - Scheduled Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - scheduleDate
              properties:
                number:
                  type: string
                  description: Phone number without country code prefix (either number or jid must be provided)
                  example: "1234567890"
                jid:
                  type: string
                  description: WhatsApp JID for groups or direct formatted numbers (either number or jid must be provided)
                  example: "120363147258369076@g.us"
                message:
                  type: string
                  description: Message content to send
                  example: "Happy Birthday! 🎂"
                scheduleDate:
                  type: string
                  format: date-time
                  description: ISO 8601 date-time when the message should be sent
                  example: "2025-12-26T20:34:00Z"
                description:
                  type: string
                  description: Optional description of the scheduled message
                  example: "Birthday reminder for John"
      responses:
        '200':
          description: Date-based scheduled message created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Date-based scheduled message created"
                  scheduledMessage:
                    $ref: '#/components/schemas/ScheduledMessage'
        '400':
          description: Invalid request, date format, or date in the past
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scheduled/bulk:
    post:
      summary: Bulk operations on scheduled messages
      description: Perform bulk activate, deactivate, or delete operations on multiple scheduled messages
      operationId: bulkScheduledMessages
      tags:
        - Scheduled Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
                - action
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  description: Array of scheduled message IDs to operate on
                  example: ["123e4567-e89b-12d3-a456-426614174000", "987fcdeb-51a2-43d7-8f9e-123456789abc"]
                action:
                  type: string
                  enum: [activate, deactivate, delete]
                  description: Action to perform on all specified messages
                  example: "deactivate"
      responses:
        '200':
          description: Bulk operation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Bulk deactivate completed"
                  results:
                    type: object
                    properties:
                      processed:
                        type: integer
                        description: Total number of IDs processed
                        example: 2
                      successful:
                        type: integer
                        description: Number of successful operations
                        example: 1
                      failed:
                        type: integer
                        description: Number of failed operations
                        example: 1
                      successfulIds:
                        type: array
                        items:
                          type: string
                        description: IDs that were successfully processed
                        example: ["123e4567-e89b-12d3-a456-426614174000"]
                      failures:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            error:
                              type: string
                        description: Details of failed operations
                        example: [{"id": "987fcdeb-51a2-43d7-8f9e-123456789abc", "error": "Not found"}]
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /restart:
    post:
      summary: Restart WhatsApp session
      description: Restarts the WhatsApp connection (may require re-authentication)
      operationId: restartSession
      tags:
        - System
      responses:
        '200':
          description: Restart initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "WhatsApp session restart initiated"
        '500':
          description: Failed to restart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule-examples:
    get:
      summary: Get cron schedule examples
      description: Returns common cron schedule patterns and formatting help
      operationId: getScheduleExamples
      tags:
        - Utilities
      responses:
        '200':
          description: Schedule examples and format information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  examples:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      "Every day at 9 AM": "0 9 * * *"
                      "Every Monday at 10 AM": "0 10 * * 1"
                      "Every Friday at 5 PM": "0 17 * * 5"
                  format:
                    type: string
                    example: "minute hour day month dayOfWeek"
                  note:
                    type: string
                    example: "Use https://crontab.guru to validate your cron expressions"

  /pubsub/topics:
    get:
      summary: Get all pub/sub topics
      description: Returns a list of all available pub/sub topics with their metadata
      operationId: getPubSubTopics
      tags:
        - Pub/Sub
      responses:
        '200':
          description: List of topics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  topics:
                    type: array
                    items:
                      $ref: '#/components/schemas/PubSubTopic'

    post:
      summary: Create a new pub/sub topic
      description: Creates a new topic for publishing messages to multiple subscribers
      operationId: createPubSubTopic
      tags:
        - Pub/Sub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Unique name for the topic
                  example: "daily-updates"
                description:
                  type: string
                  description: Optional description of the topic
                  example: "Daily status updates for the team"
      responses:
        '201':
          description: Topic created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Topic created"
                  topic:
                    $ref: '#/components/schemas/PubSubTopic'
        '400':
          description: Invalid request or topic name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pubsub/topics/{id}:
    get:
      summary: Get a specific pub/sub topic
      description: Returns details of a specific topic including its subscribers
      operationId: getPubSubTopic
      tags:
        - Pub/Sub
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Topic ID
      responses:
        '200':
          description: Topic details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  topic:
                    $ref: '#/components/schemas/PubSubTopic'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a pub/sub topic
      description: Permanently deletes a topic and all its subscriptions
      operationId: deletePubSubTopic
      tags:
        - Pub/Sub
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Topic ID
      responses:
        '200':
          description: Topic deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Topic deleted"
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pubsub/topics/{id}/subscribers:
    get:
      summary: Get subscribers for a topic
      description: Returns all subscribers for a specific topic
      operationId: getTopicSubscribers
      tags:
        - Pub/Sub
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Topic ID
      responses:
        '200':
          description: List of subscribers
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  subscribers:
                    type: array
                    items:
                      $ref: '#/components/schemas/TopicSubscriber'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Subscribe to a topic
      description: Adds a phone number as a subscriber to a topic
      operationId: subscribeToTopic
      tags:
        - Pub/Sub
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Topic ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - number
              properties:
                number:
                  type: string
                  description: Phone number to subscribe (digits only)
                  example: "1234567890"
      responses:
        '200':
          description: Subscription successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Subscribed to topic"
                  topic:
                    $ref: '#/components/schemas/PubSubTopic'
        '400':
          description: Invalid phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Unsubscribe from a topic
      description: Removes a phone number from a topic's subscribers
      operationId: unsubscribeFromTopic
      tags:
        - Pub/Sub
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Topic ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - number
              properties:
                number:
                  type: string
                  description: Phone number to unsubscribe (digits only)
                  example: "1234567890"
      responses:
        '200':
          description: Unsubscription processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Unsubscribed from topic"
                  topic:
                    $ref: '#/components/schemas/PubSubTopic'
        '400':
          description: Invalid phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pubsub/subscriptions/{number}:
    get:
      summary: Get subscription status for a phone number
      description: Returns all topics that a specific phone number is subscribed to
      operationId: getSubscriptionStatus
      tags:
        - Pub/Sub
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
          description: Phone number (digits only)
          example: "1234567890"
      responses:
        '200':
          description: Subscription status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  subscription:
                    $ref: '#/components/schemas/SubscriptionStatus'
        '400':
          description: Invalid phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pubsub/publish:
    post:
      summary: Publish message to topic
      description: Broadcasts a message to all subscribers of a specific topic
      operationId: publishToTopic
      tags:
        - Pub/Sub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - topicId
                - message
              properties:
                topicId:
                  type: string
                  description: ID of the topic to publish to
                  example: "123e4567-e89b-12d3-a456-426614174000"
                message:
                  type: string
                  description: Message content to broadcast
                  example: "Hello everyone! This is a broadcast message."
      responses:
        '200':
          description: Message broadcast completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Message broadcast completed"
                  summary:
                    $ref: '#/components/schemas/PublishSummary'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: WhatsApp not connected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pubsub/settings:
    get:
      summary: Get pub/sub settings
      description: Returns current pub/sub configuration settings
      operationId: getPubSubSettings
      tags:
        - Pub/Sub
      responses:
        '200':
          description: Current settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  settings:
                    $ref: '#/components/schemas/PubSubSettings'

    put:
      summary: Update pub/sub settings
      description: Updates pub/sub configuration settings
      operationId: updatePubSubSettings
      tags:
        - Pub/Sub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messageDelaySeconds:
                  type: number
                  minimum: 0
                  description: Delay in seconds between messages when broadcasting
                  example: 2
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Settings updated"
                  settings:
                    $ref: '#/components/schemas/PubSubSettings'
        '400':
          description: Invalid settings parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    ScheduledMessage:
      type: object
      properties:
        id:
          type: string
          description: Unique message identifier
          example: "123e4567-e89b-12d3-a456-426614174000"
        number:
          type: string
          description: Phone number (optional if jid is provided)
          example: "1234567890"
        jid:
          type: string
          description: WhatsApp JID for groups or direct formatted numbers (optional if number is provided)
          example: "120363147258369076@g.us"
        message:
          type: string
          description: Message content
          example: "Happy Monday!"
        schedule:
          type: string
          description: Cron schedule expression (empty for date-based schedules)
          example: "0 9 * * 1"
        scheduleDate:
          type: string
          format: date-time
          description: ISO 8601 date-time for one-time scheduled messages
          example: "2025-12-26T20:34:00Z"
        description:
          type: string
          description: Message description
          example: "Weekly Monday greeting"
        oneTime:
          type: boolean
          description: One-time message flag
          example: false
        active:
          type: boolean
          description: Whether the message is active
          example: true
        executed:
          type: boolean
          description: Whether the date-based message has been sent
          example: false
        created:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-01-15T10:30:00Z"
        updated:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-15T11:30:00Z"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message
          example: "Invalid request parameters"

    PubSubTopic:
      type: object
      properties:
        id:
          type: string
          description: Unique topic identifier (UUID)
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Topic name (unique)
          example: "daily-updates"
        description:
          type: string
          description: Optional topic description
          example: "Daily status updates for the team"
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/TopicSubscriber'
          description: List of subscribers to this topic
        created:
          type: string
          format: date-time
          description: Topic creation timestamp
          example: "2024-01-15T10:30:00Z"
        updated:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-15T11:30:00Z"

    TopicSubscriber:
      type: object
      properties:
        number:
          type: string
          description: Phone number (normalized, digits only)
          example: "1234567890"
        subscribedAt:
          type: string
          format: date-time
          description: Subscription timestamp
          example: "2024-01-15T10:30:00Z"

    SubscriptionStatus:
      type: object
      properties:
        number:
          type: string
          description: Original phone number provided
          example: "+1-234-567-8900"
        normalized:
          type: string
          description: Normalized phone number (digits only)
          example: "1234567890"
        topics:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Topic ID
                example: "123e4567-e89b-12d3-a456-426614174000"
              name:
                type: string
                description: Topic name
                example: "daily-updates"
          description: List of topics the number is subscribed to

    PublishResult:
      type: object
      properties:
        number:
          type: string
          description: Phone number the message was sent to
          example: "1234567890"
        success:
          type: boolean
          description: Whether the message was sent successfully
          example: true
        error:
          type: string
          description: Error message if sending failed
          example: "Failed to deliver message"

    PublishSummary:
      type: object
      properties:
        topic:
          $ref: '#/components/schemas/PubSubTopic'
        attempted:
          type: integer
          description: Total number of subscribers the message was attempted to be sent to
          example: 5
        delivered:
          type: integer
          description: Number of successful message deliveries
          example: 4
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublishResult'
          description: Detailed results for each subscriber

    PubSubSettings:
      type: object
      properties:
        messageDelaySeconds:
          type: number
          minimum: 0
          description: Delay in seconds between messages when broadcasting to avoid rate limits
          example: 1

tags:
  - name: System
    description: System status and health endpoints
  - name: Authentication
    description: WhatsApp authentication and QR code endpoints
  - name: Groups
    description: WhatsApp group management
  - name: Messaging
    description: Immediate message sending
  - name: Scheduled Messages
    description: Scheduled message management
  - name: Pub/Sub
    description: Publish/Subscribe messaging system for broadcasting to multiple subscribers
  - name: Utilities
    description: Helper endpoints and examples